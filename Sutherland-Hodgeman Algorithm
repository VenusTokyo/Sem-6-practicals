Write a program implementing Sutherland-Hodgeman Algorithm for polygon clipping.
Program:
#include&lt;iostream.h&gt;
#include&lt;conio.h&gt;
#include&lt;graphics.h&gt;
int k,xmin,ymin,xmax,ymax,arr[20],m;
void clipl (int x1, int y1, int x2, int y2)
{
if(x2-x1)
m=(y2-y1)/(x2-x1);
else
m=100000;
if(x1 &gt;= xmin &amp;&amp; x2 &gt;= xmin)
{
arr[k]=x2;
arr[k+1]=y2;
k+=2;
}
if(x1 &lt; xmin &amp;&amp; x2 &gt;= xmin)
{
arr[k]=xmin;
arr[k+1]=y1+m*(xmin-x1);
arr[k+2]=x2;
arr[k+3]=y2;
k+=4;
}
if(x1 &gt;= xmin &amp;&amp; x2 &lt; xmin)
{
arr[k]=xmin;
arr[k+1]=y1+m*(xmin-x1);
k+=2;

}
}
void clipt(int x1, int y1, int x2, int y2)
{
if(y2-y1)
m=(x2-x1)/(y2-y1);
else
m=100000;
if(y1 &lt;= ymax &amp;&amp; y2 &lt;= ymax)
{
arr[k]=x2;
arr[k+1]=y2;
k+=2;
}
if(y1 &gt; ymax &amp;&amp; y2 &lt;= ymax)
{
arr[k]=x1+m*(ymax-y1);
arr[k+1]=ymax;
arr[k+2]=x2;
arr[k+3]=y2;
k+=4;
}
if(y1 &lt;= ymax &amp;&amp; y2 &gt; ymax)
{
arr[k]=x1+m*(ymax-y1);
arr[k+1]=ymax;
k+=2;
}
}
void clipr(int x1, int y1, int x2, int y2)
{
if(x2-x1)
m=(y2-y1)/(x2-x1);
else
m=100000;
if(x1 &lt;= xmax &amp;&amp; x2 &lt;= xmax)
{
arr[k]=x2;
arr[k+1]=y2;
k+=2;
}
if(x1 &gt; xmax &amp;&amp; x2 &lt;= xmax)
{
arr[k]=xmax;
arr[k+1]=y1+m*(xmax-x1);
arr[k+2]=x2;
arr[k+3]=y2;
k+=4;
}
if(x1 &lt;= xmax &amp;&amp; x2 &gt; xmax)
{
arr[k]=xmax;
arr[k+1]=y1+m*(xmax-x1);
k+=2;
}
}
void clipb(int x1, int y1, int x2, int y2)

{
if(y2-y1)
m=(x2-x1)/(y2-y1);
else
m=100000;
if(y1 &gt;= ymin &amp;&amp; y2 &gt;= ymin)
{
arr[k]=x2;
arr[k+1]=y2;
k+=2;
}
if(y1 &lt; ymin &amp;&amp; y2 &gt;= ymin)
{
arr[k]=x1+m*(ymin-y1);
arr[k+1]=ymin;
arr[k+2]=x2;
arr[k+3]=y2;
k+=4;
}
if(y1 &gt;= ymin &amp;&amp; y2 &lt; ymin)
{
arr[k]=x1+m*(ymin-y1);
arr[k+1]=ymin;
k+=2;
}
}
void main()
{
int gd=DETECT,gm,n,poly[20];
int xi,yi,xf,yf,polyy[20];
initgraph(&amp;gd,&amp;gm,&quot;C:\\TurboC3\\BGI&quot;);
setcolor(WHITE);
cout&lt;&lt;&quot;Enter the Minimum Coordinates of visible window : x : &quot;;
cin&gt;&gt;xmin;
cout&lt;&lt;&quot;y : &quot;;
cin&gt;&gt;ymin;
cout&lt;&lt;&quot;Enter the Maximum Coordinates of visible window : x : &quot;;
cin&gt;&gt;xmax;
cout&lt;&lt;&quot;y : &quot;;
cin&gt;&gt;ymax;
cout&lt;&lt;&quot;Enter the number of side of Polygon to be clipped : &quot;;
cin&gt;&gt;n;
cout&lt;&lt;&quot;Enter the coordinates :&quot;;
for(int i=0 ; i &lt; 2*n ; i++)
cin&gt;&gt;polyy[i];
polyy[i]=polyy[0];
polyy[i+1]=polyy[1];
for(i=0 ; i &lt; 2*n+2 ; i++)
poly[i]=polyy[i];

clrscr();
rectangle(xmin,ymax,xmax,ymin);
cout&lt;&lt;&quot;\tUNCLIPPED POLYGON&quot;;
setcolor(WHITE);
fillpoly(n,poly);
getch();
clrscr();
k=0;

for(i=0;i &lt; 2*n;i+=2)

clipl(polyy[i],polyy[i+1],polyy[i+2],polyy[i+3]);

n=k/2;
for(i=0;i &lt; k;i++)

polyy[i]=arr[i];
polyy[i]=polyy[0];
polyy[i+1]=polyy[1];
k=0;
for(i=0;i &lt; 2*n;i+=2)

clipt(polyy[i],polyy[i+1],polyy[i+2],polyy[i+3]);

n=k/2;
for(i=0;i &lt; k;i++)

polyy[i]=arr[i];
polyy[i]=polyy[0];
polyy[i+1]=polyy[1];
k=0;
for(i=0;i &lt; 2*n;i+=2)

clipr(polyy[i],polyy[i+1],polyy[i+2],polyy[i+3]);

n=k/2;
for(i=0;i &lt; k;i++)

polyy[i]=arr[i];
polyy[i]=polyy[0];
polyy[i+1]=polyy[1];
k=0;
for(i=0;i &lt; 2*n;i+=2)

clipb(polyy[i],polyy[i+1],polyy[i+2],polyy[i+3]);

for(i=0;i &lt; k;i++)
poly[i]=arr[i];

if(k)

fillpoly(k/2,poly);

setcolor(RED);
rectangle(xmin,ymax,xmax,ymin);
cout&lt;&lt;&quot;CLIPPED POLYGON&quot;;
getch();
closegraph();
}
